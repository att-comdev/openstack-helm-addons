# Copyright 2017 The Openstack-Helm Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: {{ .Values.replicas.grafana }}
  revisionHistoryLimit: {{ .Values.upgrades.revision_history }}
  strategy:
    type: {{ .Values.upgrades.pod_replacement_strategy }}
    {{ if eq .Values.upgrades.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.upgrades.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.upgrades.rolling_update.max_surge }}
    {{ end }}
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: {{ .Values.images.grafana }}
        imagePullPolicy: {{ .Values.images.pull_policy }}
        env:
        - name: GF_AUTH_BASIC_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: grafana-credentials
              key: user
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-credentials
              key: password
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/grafana-storage
        ports:
        - name: {{ .Values.network.port.name }}
          containerPort: {{ .Values.network.port.port }}
        {{ if .Values.resources.enabled }}
        resources:
          requests:
            memory: {{ .Values.resources.grafana.requests.memory }}
            cpu: {{ .Values.resources.grafana.requests.cpu }}
          limits:
            memory: {{ .Values.resources.grafana.limits.memory }}
            cpu: {{ .Values.resources.grafana.limits.cpu }}
        {{ end }}
      - name: grafana-watcher
        image: {{ .Values.images.grafana_watcher }}
        imagePullPolicy: {{ .Values.images.pull_policy }}
        args:
          - '--watch-dir=/var/grafana-dashboards'
          - '--grafana-url=http://localhost:3000'
        env:
        - name: GRAFANA_USER
          valueFrom:
            secretKeyRef:
              name: grafana-credentials
              key: user
        - name: GRAFANA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-credentials
              key: password
        volumeMounts:
        - name: grafana-dashboards
          mountPath: /var/grafana-dashboards
        {{ if .Values.resources.enabled }}
        resources:
          requests:
            memory: {{ .Values.resources.grafana_watcher.requests.memory }}
            cpu: {{ .Values.resources.grafana_watcher.requests.cpu }}
          limits:
            memory: {{ .Values.resources.grafana_watcher.limits.memory }}
            cpu: {{ .Values.resources.grafana_watcher.limits.cpu }}
        {{ end }}
        volumeMounts:
        - name: grafana-dashboards
          mountPath: /var/grafana-dashboards
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
