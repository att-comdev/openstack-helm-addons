# Copyright 2017 The Openstack-Helm Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana-logging
  labels:
    k8s-app: kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
  annotations:
    configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.hash" }}
spec:
  replicas: {{ .Values.replicas.kibana }}
  revisionHistoryLimit: {{ .Values.upgrades.revision_history }}
  strategy:
    type: {{ .Values.upgrades.pod_replacement_strategy }}
    {{ if eq .Values.upgrades.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.upgrades.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.upgrades.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
    spec:
      containers:
      - name: kibana-logging
        image: {{ .Values.images.kibana }}
        imagePullPolicy: {{ .Values.images.pull_policy }}
        {{ if .Values.resources.enabled }}
        resources:
          requests:
            cpu: {{ .Values.resources.kibana.requests.cpu }}
            memory: {{ .Values.resources.kibana.requests.memory }}
          limits:
            cpu: {{ .Values.resources.kibana.limits.cpu }}
            memory: {{ .Values.resources.kibana.limits.memory }}
        {{ end }}
        command:
          - bash
          - /tmp/start.sh
        ports:
        - containerPort: {{ .Values.config.server.port }}
          name: {{ .Values.network.target_port }}
          protocol: TCP
        volumeMounts:
        - name: kibana-bin
          mountPath: /tmp/start.sh
          subPath: start.sh
        - name: etckibana
          mountPath: /opt/kibana/config
        - name: kibana-etc
          mountPath: /opt/kibana/config/kibana.yml
          subPath: kibana.yml
      volumes:
      - name: kibana-bin
        configMap:
          name: kibana-bin
      - name: etckibana
        emptyDir: {}
      - name: kibana-etc
        configMap:
          name: kibana-etc
