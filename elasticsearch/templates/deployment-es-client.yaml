# Copyright 2017 The Openstack-Helm Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.labels.es_client.name }}
  labels:
    component: {{ .Values.labels.common.component }}
    role: {{ .Values.labels.es_client.role }}
spec:
  replicas: {{ .Values.replicas.es_client }}
  template:
    metadata:
      labels:
        component: {{ .Values.labels.common.component }}
        role: {{ .Values.labels.es_client.role }}
      annotations:
        # Elasticsearch uses a hybrid mmapfs / niofs directory by default to
        # store its indices. The default operating system limits on mmap counts
        # is likely to be too low, which may result in out of memory exceptions,
        # so we use vm.max_map_count=262144 to increase that value.
        pod.beta.kubernetes.io/init-containers: '[
          {
          "name": "sysctl",
            "image": "busybox",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'  
    spec:
      containers:
      - name: {{ .Values.labels.es_client.name }}
        securityContext:
          privileged: false
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: {{ .Values.images.elasticsearch }}
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        {{- if .Values.resources.enabled }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
        {{- end }}
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "CLUSTER_NAME"
          value: {{ .Values.cluster_name }}
        - name: NODE_MASTER
          value: "false"
        - name: NODE_DATA
          value: "false"
        - name: HTTP_ENABLE
          value: "true"
        - name: "ES_JAVA_OPTS"
          value: {{ .Values.es_java_opts.es_client }}
        ports:
        - containerPort: {{ .Values.network.client.port }}
          name: {{ .Values.network.client.name }}
          protocol: {{ .Values.network.client.protocol }}
        - containerPort: {{ .Values.network.discovery.port}} 
          name: {{ .Values.network.discovery.name }}
          protocol: {{ .Values.network.discovery.protocol }}
        volumeMounts:
        - name: storage
          mountPath: /data
      volumes:
      - name: storage
        emptyDir: {}
